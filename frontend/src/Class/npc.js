/**
 * Created by user on 05.01.17.
 */
var Npc,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Npc = (function() {
  function Npc(Restangular1, q1) {
    this.Restangular = Restangular1;
    this.q = q1;
    this.succeed = bind(this.succeed, this);
    this.fail = bind(this.fail, this);
    this.selectCurrent = bind(this.selectCurrent, this);
    this.findCurrent = bind(this.findCurrent, this);
    this.findNode = bind(this.findNode, this);
    this.loadTree = bind(this.loadTree, this);
    this.loadNodes = bind(this.loadNodes, this);
    this.initNew = bind(this.initNew, this);
    this.type = 'npc';
    this.tree = [];
    this.nodes = [
      {
        id: 1,
        text: "Да, здравствуйте, чем можем вам помочь?",
        used: false
      }, {
        id: 2,
        text: "Да отошел он, не знаем когда будет...",
        used: false
      }, {
        id: 3,
        text: "Да не работают такие у нас...",
        used: false
      }, {
        id: 7,
        text: "И вам добрый день!",
        used: false
      }, {
        id: 4,
        text: "А кто его спрашивает?",
        used: false
      }, {
        id: 5,
        text: "Алло?",
        used: false
      }, {
        id: 6,
        text: "Меня зовут PERSONNAME",
        used: false
      }, {
        id: 8,
        text: "Вы знаете, он сейчас находится на совещании, но вы можете оставить информацию о вашей компании у нас на электронной почте",
        used: false
      }, {
        id: 9,
        text: "%EMAIL%, Можете высысылать на него информацию, и мы с вами свяжемся, если нам будет интересно",
        used: false
      }, {
        id: 10,
        text: "Нет не надо нас набирать, мы вас сами наберем, до свидания!",
        used: false,
        type: "failure"
      }, {
        id: 11,
        text: "Ну тогда всего доброго!",
        used: false,
        type: "failure"
      }, {
        id: 12,
        text: "Ну знаете, сегодня скорее всего уже не освободится, но можете позвонить завтра в районе обеда, попробую вас с ним соединить",
        used: false,
        type: "failure"
      }, {
        id: 13,
        text: "Да, конечно. Давайте соединю",
        used: false,
        type: "success"
      }, {
        id: 14,
        text: "Я извиняюсь, но мне кажется вы не долны сюда больше звонить, всего доброго!",
        used: false,
        type: "failure"
      }, {
        id: 15,
        text: "Я могу продиктовать вам электронную почту и вы вышлите на нее ваше предложение",
        used: false
      }, {
        id: 16,
        text: "А что вам конкретно нужно, вы хотите что то предложить?",
        used: false
      }, {
        id: 17,
        text: "А он о вас знает, как вас представить?",
        used: false
      }
    ];
    this.loadedData = [];
  }

  Npc.prototype.initNew = function(Restangular, q) {
    return new Npc(Restangular, q);
  };

  Npc.prototype.loadNodes = function() {
    var def;
    def = this.q.defer();
    this.Restangular.one('api/v1/nodes/npc').get().then((function(_this) {
      return function(res) {
        _this.nodes = res;
        return def.resolve();
      };
    })(this));
    return def.promise;
  };

  Npc.prototype.loadTree = function() {
    var def;
    def = this.q.defer();
    this.Restangular.one('api/v1/nodes/player').get().then((function(_this) {
      return function(res) {
        _this.tree = res;
        return def.resolve();
      };
    })(this));
    return def.promise;
  };

  Npc.prototype.findNode = function(questionId) {
    return this.branch = _.find(this.tree, {
      id: questionId
    });
  };

  Npc.prototype.findCurrent = function() {
    var choiceIndex, name;
    choiceIndex = _.sample(this.branch.choice);
    this.current = _.find(this.nodes, {
      id: choiceIndex
    });
    if (this.current.text.indexOf("PERSONNAME")) {
      name = this.name;
      return this.current.text = _.replace(this.current.text, 'PERSONNAME', name);
    }
  };

  Npc.prototype.selectCurrent = function(id) {
    return this.Restangular.one('api/v1/npc/', id).get().then((function(_this) {
      return function(res) {
        _.extend(_this, res);
      };
    })(this));
  };

  Npc.prototype.fail = function() {
    return this.current = {
      id: null,
      text: "Извините, Всего доброго! (звук кладущейся трубки)"
    };
  };

  Npc.prototype.succeed = function() {
    return this.current = {
      id: null,
      text: "Давайте соединю"
    };
  };

  return Npc;

})();

angular.module('app').service('Npc', ['Restangular', '$q', Npc]);

module.exports = Npc;

// ---
// generated by coffee-script 1.9.2